/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UML;

import Dao.ChungTuCTDAO;
import Dao.ChungTuDAO;
import Dao.SPKhoDAO;
import Help.Auth;
import static Help.ColorHelper.*;
import Help.DateHelper;
import Help.DialogHelper;
import static Help.ValidateHelper.Plain;
import Model.ChungTuCT;
import Model.SPKho;
import java.awt.Color;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class ThanhToan_JFrame extends javax.swing.JFrame {

    /**
     * Creates new form ThanhToan_JFrame
     */
    public ThanhToan_JFrame() {
        initComponents();
        init();
    }

    ChungTuCTDAO dao = new ChungTuCTDAO();
    ChungTuDAO daoChungTu = new ChungTuDAO();
    SPKhoDAO daoSPKho = new SPKhoDAO();
    String maLoH;
    int loaiSp;

    public ThanhToan_JFrame(String maCT, String loaiCT, double tien) {
        initComponents();
        init();
        lblLoai.setText(loaiCT);
        String tongTien = String.format("%.1f", tien);
        lblGiaTien.setText(tongTien);
        loadChungTuCT(maCT);
    }

    void init() {
        designTable(false, new Color(255, 204, 0), Color.white, Plain, tblDonHang);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDuyetHang = new javax.swing.JPanel();
        lblDuyetHang = new javax.swing.JLabel();
        lblThoat = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblLoai = new javax.swing.JLabel();
        lblDong = new javax.swing.JLabel();
        lblLoaiThanhToan = new javax.swing.JLabel();
        lblGiaTien = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        lblChuY = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        lblTienHang = new javax.swing.JLabel();
        lblThanhToan = new javax.swing.JLabel();
        lblDonHangCuaBan = new javax.swing.JLabel();
        lblAnh = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlDuyetHang.setBackground(new java.awt.Color(255, 255, 255));
        pnlDuyetHang.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 1, new java.awt.Color(0, 0, 0)));
        pnlDuyetHang.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlDuyetHangMouseDragged(evt);
            }
        });
        pnlDuyetHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlDuyetHangMousePressed(evt);
            }
        });
        pnlDuyetHang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDuyetHang.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblDuyetHang.setForeground(new java.awt.Color(255, 204, 0));
        lblDuyetHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/thanhToan.png"))); // NOI18N
        lblDuyetHang.setText("Thanh toán");
        pnlDuyetHang.add(lblDuyetHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lblThoat.setFont(new java.awt.Font("UVN Chim Bien Nhe", 1, 36)); // NOI18N
        lblThoat.setForeground(new java.awt.Color(51, 51, 51));
        lblThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoat.setText("O");
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThoatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThoatMouseExited(evt);
            }
        });
        pnlDuyetHang.add(lblThoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 69, 57));

        jSeparator1.setOpaque(true);
        pnlDuyetHang.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 200, 10));

        getContentPane().add(pnlDuyetHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 70));

        kGradientPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        kGradientPanel1.setkEndColor(new java.awt.Color(255, 204, 0));
        kGradientPanel1.setkGradientFocus(750);
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã CT", "Mã SP", "Tên SP", "Loại SP", "Giá", "Số Lượng", "Đơn vị tính", "Tên NhaCc", "Mã Lô Hàng", "Ngày Nhập", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang.setRowHeight(25);
        tblDonHang.setSelectionBackground(new java.awt.Color(153, 153, 0));
        tblDonHang.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tblDonHang);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 850, 300));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLoai.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblLoai.setText("Nhập hàng");
        jPanel1.add(lblLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        lblDong.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDong.setForeground(new java.awt.Color(255, 102, 0));
        lblDong.setText("<html><u>đ</u></html>");
        jPanel1.add(lblDong, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, -1, -1));

        lblLoaiThanhToan.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLoaiThanhToan.setForeground(new java.awt.Color(51, 51, 51));
        lblLoaiThanhToan.setText("Loại thanh toán");
        jPanel1.add(lblLoaiThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        lblGiaTien.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblGiaTien.setForeground(new java.awt.Color(255, 102, 0));
        lblGiaTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGiaTien.setText("165.945");
        jPanel1.add(lblGiaTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 130, 200, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 450, 10));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 450, 10));

        lblChuY.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblChuY.setForeground(new java.awt.Color(51, 51, 255));
        lblChuY.setText("*** Chú ý bạn cần kiểm tra lại đơn hàng trước khi thanh toán");
        jPanel1.add(lblChuY, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        lblTongTien.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(51, 51, 51));
        lblTongTien.setText("Tổng tiền");
        jPanel1.add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        lblTienHang.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTienHang.setForeground(new java.awt.Color(51, 51, 51));
        lblTienHang.setText("Tiền hàng");
        jPanel1.add(lblTienHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        lblThanhToan.setBackground(new java.awt.Color(255, 51, 0));
        lblThanhToan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        lblThanhToan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThanhToan.setText("Thanh Toán");
        lblThanhToan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblThanhToan.setOpaque(true);
        lblThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThanhToanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThanhToanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThanhToanMouseExited(evt);
            }
        });
        jPanel1.add(lblThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 110, 50));

        kGradientPanel1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 480, 250));

        lblDonHangCuaBan.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblDonHangCuaBan.setForeground(new java.awt.Color(0, 51, 51));
        lblDonHangCuaBan.setText("Đơn hàng của bạn");
        kGradientPanel1.add(lblDonHangCuaBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 5, -1, -1));

        lblAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/thanhToanIcon.png"))); // NOI18N
        kGradientPanel1.add(lblAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 350, 230));

        getContentPane().add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 70, 868, 610));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        this.dispose();
    }//GEN-LAST:event_lblThoatMouseClicked

    private void lblThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseEntered
        lblThoat.setForeground(Color.YELLOW);
    }//GEN-LAST:event_lblThoatMouseEntered

    private void lblThoatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseExited
        lblThoat.setForeground(new Color(51, 51, 51));
    }//GEN-LAST:event_lblThoatMouseExited

    private void pnlDuyetHangMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDuyetHangMouseDragged
        MouseDragged(evt, this);
    }//GEN-LAST:event_pnlDuyetHangMouseDragged

    private void pnlDuyetHangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDuyetHangMousePressed
        moveFrom(evt);
    }//GEN-LAST:event_pnlDuyetHangMousePressed

    private void lblThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThanhToanMouseClicked
        // TODO add your handling code here:
        update();
        this.dispose();

    }//GEN-LAST:event_lblThanhToanMouseClicked

    private void lblThanhToanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThanhToanMouseEntered
        setBackround(new Color(255, 153, 51), new Color(102, 51, 0), lblThanhToan);
    }//GEN-LAST:event_lblThanhToanMouseEntered

    private void lblThanhToanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThanhToanMouseExited
        setBackround(new Color(255, 51, 0), Color.WHITE, lblThanhToan);
    }//GEN-LAST:event_lblThanhToanMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThanhToan_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThanhToan_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThanhToan_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThanhToan_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThanhToan_JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblChuY;
    private javax.swing.JLabel lblDonHangCuaBan;
    private javax.swing.JLabel lblDong;
    private javax.swing.JLabel lblDuyetHang;
    private javax.swing.JLabel lblGiaTien;
    private javax.swing.JLabel lblLoai;
    private javax.swing.JLabel lblLoaiThanhToan;
    private javax.swing.JLabel lblThanhToan;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblTienHang;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel pnlDuyetHang;
    private javax.swing.JTable tblDonHang;
    // End of variables declaration//GEN-END:variables

    void loadChungTuCT(String maCT) {
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);
        List<ChungTuCT> list = dao.selectByConditions(maCT);
        for (ChungTuCT ct : list) {
            Object[] ob = {ct.getMaChungTu(), ct.getMaSP(),
                ct.getTenSP(), ct.getLoaiSP(),
                ct.getGia(), ct.getSoLuong(),
                ct.getDonViTinh(), ct.getTenNCC(),
                ct.getMaLoHang(), ct.getNgayNhap(),
                ct.getHinh()};
            model.addRow(ob);
        }
    }

    void update() {
        String mct = String.valueOf(tblDonHang.getValueAt(0, 0));
        if (DialogHelper.confirm(null, "Bạn có muốn thanh toán đơn \ncó mã " + mct + " không?")) {
            if (daoChungTu.update("Đã duyệt", Auth.user.getTenDn(), mct) == 1) {
                if (lblLoai.getText().equals("Nhập hàng")) {
                    if (nhapHang() == true) {
                        DialogHelper.alert(null, "Thanh toán thành công");
                        maLoH = "";
                        loaiSp = 0;
                    }
                } else {
                    if (xuatHang() == true) {
                        DialogHelper.alert(null, "Thanh toán thành công");
                    }
                }
            } else {
                DialogHelper.alert(null, "Thanh toán thất bại");
            }
        }
    }

    SPKho getModel1() {
        SPKho sp = new SPKho();
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String maSP = String.valueOf(tblDonHang.getValueAt(i, 1));
            String tenSP = String.valueOf(tblDonHang.getValueAt(i, 2));
            int loaiSP = Integer.parseInt(String.valueOf(tblDonHang.getValueAt(i, 3)));
            loaiSp = loaiSP;
            double gia = Double.parseDouble(String.valueOf(tblDonHang.getValueAt(i, 4)));
            int sl = Integer.parseInt(String.valueOf(tblDonHang.getValueAt(i, 5)));
            String donVT = String.valueOf(tblDonHang.getValueAt(i, 6));
            String tenNCC = String.valueOf(tblDonHang.getValueAt(i, 7));
            String maLH = String.valueOf(tblDonHang.getValueAt(i, 8));
            maLoH = maLH;
            Date ngayNhap = DateHelper.toDate(String.valueOf(tblDonHang.getValueAt(i, 9)));
            String hinh = String.valueOf(tblDonHang.getValueAt(i, 10));

            sp.setMaSPKho(maSP);
            sp.setTenSP(tenSP);
            sp.setLoaiSP(loaiSP);
            sp.setGia(gia);
            sp.setSoLuong(sl);
            sp.setDonViTinh(donVT);
            sp.setTenNCC(tenNCC);
            sp.setMaLoHang(maLH);
            sp.setNgayNhap(ngayNhap);
            sp.setHinh(hinh);
        }
        return sp;
    }

    SPKho getModel() {
        SPKho sp = new SPKho();
        List<SPKho> dss = daoSPKho.selectByConditions(sp.getMaSPKho());
        for (int i = 0; i < dss.size(); i++) {
            if (dss.get(i).getMaSPKho().equals(sp.getMaSPKho()) && dss.get(i).getGia() != sp.getGia()) {
                return sp=getModel1();
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String maSP = String.valueOf(tblDonHang.getValueAt(i, 1));
            String tenSP = String.valueOf(tblDonHang.getValueAt(i, 2));
            int loaiSP = Integer.parseInt(String.valueOf(tblDonHang.getValueAt(i, 3)));
            loaiSp = loaiSP;
            double gia = Double.parseDouble(String.valueOf(tblDonHang.getValueAt(i, 4)));
            int sl = Integer.parseInt(String.valueOf(tblDonHang.getValueAt(i, 5)));
            String donVT = String.valueOf(tblDonHang.getValueAt(i, 6));
            String tenNCC = String.valueOf(tblDonHang.getValueAt(i, 7));
            String maLH = String.valueOf(tblDonHang.getValueAt(i, 8));
            maLoH = maLH;
            Date ngayNhap = DateHelper.toDate(String.valueOf(tblDonHang.getValueAt(i, 9)));
            String hinh = String.valueOf(tblDonHang.getValueAt(i, 10));

            sp.setMaSPKho(maSP);
            sp.setTenSP(tenSP);
            sp.setLoaiSP(loaiSP);
            sp.setGia(gia);
            sp.setSoLuong(sl);
            sp.setDonViTinh(donVT);
            sp.setTenNCC(tenNCC);
            sp.setMaLoHang(maLH);
            sp.setNgayNhap(ngayNhap);
            sp.setHinh(hinh);
        }
        return sp;
    }

    boolean nhapHang() {
        SPKho sp = getModel();
        int check = daoSPKho.insert(sp);
        System.out.println(check);
        if (check == 1) {
            DialogHelper.alert(null, "Mã lô hàng " + maLoH + " không tồn tại");
            return false;
        } else if (check == 2) {
            DialogHelper.alert(null, "Loại sản phẩm " + loaiSp + " không tồn tại");
            return false;
        }
        return true;
    }

    boolean xuatHang() {
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String maSP = String.valueOf(tblDonHang.getValueAt(i, 1));
            int sl = Integer.parseInt(String.valueOf(tblDonHang.getValueAt(i, 5)));
            int check = daoSPKho.truSoLuong(maSP, sl);
            if (check == 0) {
                DialogHelper.alert(null, "Không đủ hàng trong kho");
                return false;
            }
        }
        return true;
    }
}
