/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UML;

import Dao.*;
import static Help.ColorHelper.*;
import static Help.ValidateHelper.*;
import Model.*;
import Help.*;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import static Help.ImageHelper.*;
import java.io.File;

/**
 *
 * @author hp
 */
public class NhapHang_JFrame extends javax.swing.JFrame {

    /**
     * Creates new form NhapHang_JFrame
     */
    public NhapHang_JFrame() {
        initComponents();
        init();
        fillComoboBoxNCC();
        fillComboBoxLoaiSP();
        fillComboBoxLoHang();
        txtNgayNhap.setText(DateHelper.toString(DateHelper.now()));
        txtMaSanPham.setEditable(false);
        txtGia.setEditable(false);
        txtTenSanPham.setEditable(false);
        txtDonViTinh.setEditable(false);
    }

    void init() {
        designTable(false, new Color(0, 102, 255), Color.white, Plain, tblNhaCungCap);
        designTable(false, new Color(0, 102, 255), Color.white, Plain, tblGioHang);
        designComboBox(new Color(153, 0, 204), Color.white, Plain, cboMaNcc);
        designComboBox(new Color(153, 0, 204), Color.white, Plain, cboLoaiSP);
        designComboBox(new Color(153, 0, 204), Color.white, Plain, cboMaLoHang);
        designComboBox(new Color(153, 0, 204), Color.white, Plain, cboNhaCungCap);
        designComboBox(new Color(153, 0, 204), Color.white, Plain, cboLoaiSanPham);
    }

    NhaCungCapDAO daoNCC = new NhaCungCapDAO();
    LoaiSPDAO daoLoaiSP = new LoaiSPDAO();
    SPCungCapDAO daoSPCC = new SPCungCapDAO();
    LoHangDAO daoLoHang = new LoHangDAO();
    ChungTuDAO daoChungTu = new ChungTuDAO();
    ChungTuCTDAO daoChungTuCT = new ChungTuCTDAO();
    int indexSPCC = 0;
    int indexGioHang = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlNhapHang = new javax.swing.JPanel();
        lblNhapHang = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pnlDanhSachNhapHang = new javax.swing.JPanel();
        lblSanPhamNCC = new javax.swing.JLabel();
        pnlThongTin = new javax.swing.JPanel();
        lblNhaCC = new javax.swing.JLabel();
        cboNhaCungCap = new javax.swing.JComboBox<>();
        cboLoaiSanPham = new javax.swing.JComboBox<>();
        lblLoaiSP = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        lblGioHang = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNhaCungCap = new javax.swing.JTable();
        lblTien = new javax.swing.JLabel();
        lblHuy = new javax.swing.JLabel();
        lblTaoPhieu1 = new javax.swing.JLabel();
        lblTongTien1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlThongTinSP = new javax.swing.JPanel();
        lblThemSP = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        lblMaSP = new javax.swing.JLabel();
        lblMaNCC = new javax.swing.JLabel();
        lblTenSanPham = new javax.swing.JLabel();
        txtTenSanPham = new javax.swing.JTextField();
        lblLoaiSanPham = new javax.swing.JLabel();
        lblDonViTinh = new javax.swing.JLabel();
        txtDonViTinh = new javax.swing.JTextField();
        lblGia = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        lblSoLuong = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        lblMaLoHang = new javax.swing.JLabel();
        lblNgayNhap = new javax.swing.JLabel();
        txtNgayNhap = new javax.swing.JTextField();
        lblLoiMaSP = new javax.swing.JLabel();
        lblLoiNCC = new javax.swing.JLabel();
        lblLoiTenSP = new javax.swing.JLabel();
        lblLoiDonViTinh = new javax.swing.JLabel();
        lblLoiLoaiSP = new javax.swing.JLabel();
        lblLoiGia = new javax.swing.JLabel();
        lblLoiSoLuong = new javax.swing.JLabel();
        lblLoiMaLoHang = new javax.swing.JLabel();
        lblThemKho = new javax.swing.JLabel();
        cboLoaiSP = new javax.swing.JComboBox<>();
        cboMaNcc = new javax.swing.JComboBox<>();
        cboMaLoHang = new javax.swing.JComboBox<>();
        lblHinh = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nhập Hàng");
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlNhapHang.setBackground(new java.awt.Color(102, 0, 153));
        pnlNhapHang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        pnlNhapHang.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlNhapHangMouseDragged(evt);
            }
        });
        pnlNhapHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlNhapHangMousePressed(evt);
            }
        });
        pnlNhapHang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNhapHang.setFont(new java.awt.Font("Tahoma", 1, 32)); // NOI18N
        lblNhapHang.setForeground(new java.awt.Color(255, 255, 255));
        lblNhapHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logo.png"))); // NOI18N
        lblNhapHang.setText("Nhập hàng");
        pnlNhapHang.add(lblNhapHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 17, -1, -1));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Backs.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });
        pnlNhapHang.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 10, 100, 60));

        getContentPane().add(pnlNhapHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 80));

        pnlDanhSachNhapHang.setBackground(new java.awt.Color(255, 255, 255));
        pnlDanhSachNhapHang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlDanhSachNhapHang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSanPhamNCC.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblSanPhamNCC.setForeground(new java.awt.Color(0, 102, 204));
        lblSanPhamNCC.setText("Sản phẩm nhà cung cấp");
        pnlDanhSachNhapHang.add(lblSanPhamNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 123, -1, -1));

        pnlThongTin.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongTin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNhaCC.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblNhaCC.setForeground(new java.awt.Color(0, 102, 204));
        lblNhaCC.setText("Nhà cung cấp");

        cboNhaCungCap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NCC1", "NCC2", "NCC3" }));
        cboNhaCungCap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNhaCungCapItemStateChanged(evt);
            }
        });
        cboNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNhaCungCapActionPerformed(evt);
            }
        });

        cboLoaiSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiSanPham.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiSanPhamItemStateChanged(evt);
            }
        });
        cboLoaiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSanPhamActionPerformed(evt);
            }
        });

        lblLoaiSP.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblLoaiSP.setForeground(new java.awt.Color(0, 102, 204));
        lblLoaiSP.setText("Loại sản phẩm");

        javax.swing.GroupLayout pnlThongTinLayout = new javax.swing.GroupLayout(pnlThongTin);
        pnlThongTin.setLayout(pnlThongTinLayout);
        pnlThongTinLayout.setHorizontalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNhaCC)
                    .addComponent(cboNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoaiSP))
                .addGap(28, 28, 28))
        );
        pnlThongTinLayout.setVerticalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNhaCC)
                    .addComponent(lblLoaiSP, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pnlDanhSachNhapHang.add(pnlThongTin, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 12, -1, -1));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Giá", "Số Lượng", "Đơn vị tính", "Tên NhaCc", "Mã Lô Hàng", "Ngày Nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.setRowHeight(25);
        tblGioHang.setSelectionBackground(new java.awt.Color(255, 102, 153));
        tblGioHang.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tblGioHang);

        pnlDanhSachNhapHang.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 390, 738, 277));

        lblGioHang.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblGioHang.setForeground(new java.awt.Color(0, 102, 204));
        lblGioHang.setText("Giỏ hàng");
        pnlDanhSachNhapHang.add(lblGioHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 357, -1, -1));

        tblNhaCungCap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SpNcc", "Mã NhaCc", "Tên Sp", "Loại SP", "Đơn vị tính", "Giá", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhaCungCap.setRowHeight(25);
        tblNhaCungCap.setSelectionBackground(new java.awt.Color(255, 102, 153));
        tblNhaCungCap.setShowVerticalLines(false);
        tblNhaCungCap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhaCungCapMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNhaCungCap);

        pnlDanhSachNhapHang.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 158, 738, 198));

        lblTien.setFont(new java.awt.Font("UVN Chim Bien", 0, 24)); // NOI18N
        lblTien.setForeground(new java.awt.Color(102, 102, 255));
        lblTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTien.setText("0");
        pnlDanhSachNhapHang.add(lblTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 680, 230, 50));

        lblHuy.setBackground(new java.awt.Color(255, 255, 255));
        lblHuy.setFont(new java.awt.Font("UVN Chim Bien", 0, 24)); // NOI18N
        lblHuy.setForeground(new java.awt.Color(255, 153, 0));
        lblHuy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHuy.setText("Hủy chọn");
        lblHuy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        lblHuy.setOpaque(true);
        lblHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHuyMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblHuyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblHuyMouseExited(evt);
            }
        });
        pnlDanhSachNhapHang.add(lblHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 680, 150, 55));

        lblTaoPhieu1.setBackground(new java.awt.Color(255, 255, 255));
        lblTaoPhieu1.setFont(new java.awt.Font("UVN Chim Bien", 0, 24)); // NOI18N
        lblTaoPhieu1.setForeground(new java.awt.Color(255, 153, 0));
        lblTaoPhieu1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTaoPhieu1.setText("Nhập hàng");
        lblTaoPhieu1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        lblTaoPhieu1.setOpaque(true);
        lblTaoPhieu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTaoPhieu1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblTaoPhieu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblTaoPhieu1MouseExited(evt);
            }
        });
        pnlDanhSachNhapHang.add(lblTaoPhieu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 680, 150, 55));

        lblTongTien1.setFont(new java.awt.Font("UVN Chim Bien", 0, 24)); // NOI18N
        lblTongTien1.setForeground(new java.awt.Color(102, 102, 255));
        lblTongTien1.setText("Tổng tiền:");
        pnlDanhSachNhapHang.add(lblTongTien1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 673, -1, 55));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("<html><u>đ</u></html>");
        pnlDanhSachNhapHang.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 700, -1, -1));

        getContentPane().add(pnlDanhSachNhapHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 770, 740));

        pnlThongTinSP.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongTinSP.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new java.awt.Color(0, 0, 0)));
        pnlThongTinSP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThemSP.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 36)); // NOI18N
        lblThemSP.setForeground(new java.awt.Color(0, 102, 204));
        lblThemSP.setText("Thêm sản phẩm");
        pnlThongTinSP.add(lblThemSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 12, -1, -1));

        txtMaSanPham.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtMaSanPham.setForeground(new java.awt.Color(153, 153, 153));
        txtMaSanPham.setText("VD: SP015");
        txtMaSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMaSanPham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaSanPhamFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaSanPhamFocusLost(evt);
            }
        });
        pnlThongTinSP.add(txtMaSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 86, 210, 25));

        lblMaSP.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblMaSP.setForeground(new java.awt.Color(0, 102, 204));
        lblMaSP.setText("Mã sản phẩm");
        pnlThongTinSP.add(lblMaSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 82, -1, -1));

        lblMaNCC.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 16)); // NOI18N
        lblMaNCC.setForeground(new java.awt.Color(0, 102, 204));
        lblMaNCC.setText("Mã nhà cung cấp");
        pnlThongTinSP.add(lblMaNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 149, -1, -1));

        lblTenSanPham.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblTenSanPham.setForeground(new java.awt.Color(0, 102, 204));
        lblTenSanPham.setText("Tên sản phẩm");
        pnlThongTinSP.add(lblTenSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 213, -1, -1));

        txtTenSanPham.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtTenSanPham.setForeground(new java.awt.Color(153, 153, 153));
        txtTenSanPham.setText("VD: Keo 502");
        txtTenSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTenSanPham.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenSanPhamFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenSanPhamFocusLost(evt);
            }
        });
        pnlThongTinSP.add(txtTenSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 217, 210, 25));

        lblLoaiSanPham.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblLoaiSanPham.setForeground(new java.awt.Color(0, 102, 204));
        lblLoaiSanPham.setText("Loại sản phẩm");
        pnlThongTinSP.add(lblLoaiSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 273, -1, 34));

        lblDonViTinh.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblDonViTinh.setForeground(new java.awt.Color(0, 102, 204));
        lblDonViTinh.setText("Đơn vị tính");
        pnlThongTinSP.add(lblDonViTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 345, -1, -1));

        txtDonViTinh.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtDonViTinh.setForeground(new java.awt.Color(153, 153, 153));
        txtDonViTinh.setText("VD: Kg(Ki lô gram)");
        txtDonViTinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDonViTinh.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDonViTinhFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonViTinhFocusLost(evt);
            }
        });
        pnlThongTinSP.add(txtDonViTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 349, 369, 25));

        lblGia.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblGia.setForeground(new java.awt.Color(0, 102, 204));
        lblGia.setText("Giá");
        pnlThongTinSP.add(lblGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 413, -1, -1));

        txtGia.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtGia.setForeground(new java.awt.Color(153, 153, 153));
        txtGia.setText("VD: 15,0000");
        txtGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtGia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGiaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiaFocusLost(evt);
            }
        });
        pnlThongTinSP.add(txtGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 417, 369, 25));

        lblSoLuong.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblSoLuong.setForeground(new java.awt.Color(0, 102, 204));
        lblSoLuong.setText("Số lượng");
        pnlThongTinSP.add(lblSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, -1, -1));

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtSoLuong.setForeground(new java.awt.Color(153, 153, 153));
        txtSoLuong.setText("VD: 169000");
        txtSoLuong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSoLuong.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSoLuongFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSoLuongFocusLost(evt);
            }
        });
        pnlThongTinSP.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 484, 369, 25));

        lblMaLoHang.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblMaLoHang.setForeground(new java.awt.Color(0, 102, 204));
        lblMaLoHang.setText("Mã lô hàng");
        pnlThongTinSP.add(lblMaLoHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, -1));

        lblNgayNhap.setFont(new java.awt.Font("UVN Bai Sau Nang", 0, 18)); // NOI18N
        lblNgayNhap.setForeground(new java.awt.Color(0, 102, 204));
        lblNgayNhap.setText("Ngày nhập");
        pnlThongTinSP.add(lblNgayNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 607, -1, -1));

        txtNgayNhap.setEditable(false);
        txtNgayNhap.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNgayNhap.setText("2021-15-11");
        txtNgayNhap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlThongTinSP.add(txtNgayNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 611, 369, 25));

        lblLoiMaSP.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiMaSP.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiMaSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 117, 210, 21));

        lblLoiNCC.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiNCC.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 186, 210, 21));

        lblLoiTenSP.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiTenSP.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiTenSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 248, 210, 21));

        lblLoiDonViTinh.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiDonViTinh.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiDonViTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 386, 369, 21));

        lblLoiLoaiSP.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiLoaiSP.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiLoaiSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 318, 369, 21));

        lblLoiGia.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiGia.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 453, 369, 23));

        lblLoiSoLuong.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiSoLuong.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 515, 369, 23));

        lblLoiMaLoHang.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lblLoiMaLoHang.setForeground(new java.awt.Color(255, 51, 51));
        pnlThongTinSP.add(lblLoiMaLoHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 578, 355, 23));

        lblThemKho.setBackground(new java.awt.Color(255, 255, 255));
        lblThemKho.setFont(new java.awt.Font("UVN Chim Bien", 0, 24)); // NOI18N
        lblThemKho.setForeground(new java.awt.Color(255, 153, 0));
        lblThemKho.setText("Thêm vào giỏ hàng");
        lblThemKho.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        lblThemKho.setOpaque(true);
        lblThemKho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThemKhoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThemKhoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThemKhoMouseExited(evt);
            }
        });
        pnlThongTinSP.add(lblThemKho, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 673, -1, 55));

        cboLoaiSP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiSPItemStateChanged(evt);
            }
        });
        pnlThongTinSP.add(cboLoaiSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 275, 369, 29));

        cboMaNcc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaNccItemStateChanged(evt);
            }
        });
        pnlThongTinSP.add(cboMaNcc, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 149, 210, 29));

        cboMaLoHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMaLoHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaLoHangItemStateChanged(evt);
            }
        });
        pnlThongTinSP.add(cboMaLoHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 543, 369, 29));

        lblHinh.setBackground(new java.awt.Color(51, 0, 255));
        lblHinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblHinh.setOpaque(true);
        pnlThongTinSP.add(lblHinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 200, 200));

        getContentPane().add(pnlThongTinSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 80, 580, 740));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cboNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNhaCungCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboNhaCungCapActionPerformed

    private void cboLoaiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboLoaiSanPhamActionPerformed

    private void lblThemKhoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThemKhoMouseEntered
        setBackround(new Color(255, 153, 0), Color.WHITE, lblThemKho);
    }//GEN-LAST:event_lblThemKhoMouseEntered

    private void lblThemKhoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThemKhoMouseExited
        setBackround(Color.WHITE, new Color(255, 153, 0), lblThemKho);
    }//GEN-LAST:event_lblThemKhoMouseExited

    private void pnlNhapHangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlNhapHangMousePressed
        moveFrom(evt);
    }//GEN-LAST:event_pnlNhapHangMousePressed

    private void pnlNhapHangMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlNhapHangMouseDragged
        MouseDragged(evt, this);
    }//GEN-LAST:event_pnlNhapHangMouseDragged

    private void txtMaSanPhamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaSanPhamFocusGained
        if (txtMaSanPham.getForeground().equals(Gray)) {
            Color(txtMaSanPham, "", Plain, Black);
        }
    }//GEN-LAST:event_txtMaSanPhamFocusGained

    private void txtMaSanPhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaSanPhamFocusLost
        if (txtMaSanPham.getText().trim().isEmpty()) {
            Color(txtMaSanPham, "VD: SP1 ", Italic, Gray);
        } else {
            lblLoiMaSP.setText("");
        }
    }//GEN-LAST:event_txtMaSanPhamFocusLost

    private void txtTenSanPhamFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenSanPhamFocusGained
        if (txtTenSanPham.getForeground().equals(Gray)) {
            Color(txtTenSanPham, "", Plain, Black);
        }
    }//GEN-LAST:event_txtTenSanPhamFocusGained

    private void txtTenSanPhamFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenSanPhamFocusLost
        if (txtTenSanPham.getText().trim().isEmpty()) {
            Color(txtTenSanPham, "VD: Keo 502 ", Italic, Gray);
        } else {
            lblLoiTenSP.setText("");
        }
    }//GEN-LAST:event_txtTenSanPhamFocusLost

    private void cboLoaiSPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiSPItemStateChanged
        if (cboLoaiSP.getSelectedIndex() != 0) {
            lblLoiLoaiSP.setText("");
        }
    }//GEN-LAST:event_cboLoaiSPItemStateChanged

    private void txtDonViTinhFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonViTinhFocusGained
        if (txtDonViTinh.getForeground().equals(Gray)) {
            Color(txtDonViTinh, "", Plain, Black);
        }
    }//GEN-LAST:event_txtDonViTinhFocusGained

    private void txtDonViTinhFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonViTinhFocusLost
        if (txtDonViTinh.getText().trim().isEmpty()) {
            Color(txtDonViTinh, "VD: Kg(Ki lô gram) ", Italic, Gray);
        } else {
            lblLoiDonViTinh.setText("");
        }
    }//GEN-LAST:event_txtDonViTinhFocusLost

    private void txtGiaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiaFocusGained
        if (txtGia.getForeground().equals(Gray)) {
            Color(txtGia, "", Plain, Black);
        }
    }//GEN-LAST:event_txtGiaFocusGained

    private void txtGiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiaFocusLost
        if (txtGia.getText().trim().isEmpty()) {
            Color(txtGia, "VD: 15,000 ", Italic, Gray);
        } else {
            lblLoiGia.setText("");
        }
    }//GEN-LAST:event_txtGiaFocusLost

    private void txtSoLuongFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSoLuongFocusGained
        if (txtSoLuong.getForeground().equals(Gray)) {
            Color(txtSoLuong, "", Plain, Black);
        }
    }//GEN-LAST:event_txtSoLuongFocusGained

    private void txtSoLuongFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSoLuongFocusLost
        if (txtSoLuong.getText().trim().isEmpty()) {
            Color(txtSoLuong, "VD: 10000 ", Italic, Gray);
        } else {
            lblLoiSoLuong.setText("");
        }
    }//GEN-LAST:event_txtSoLuongFocusLost

    private void lblThemKhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThemKhoMouseClicked
        if (tblNhaCungCap.getSelectedRow() == 0) {
            DialogHelper.alert(null, "Vui lòng chọn sản phẩm trên bảng sản phẩm!");
            return;
        }
        if (checkFrom() == true) {
            if (validateFrom() == true) {

                loadGioHang();
            }
        }
    }//GEN-LAST:event_lblThemKhoMouseClicked

    private void cboMaNccItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaNccItemStateChanged
        if (cboMaNcc.getSelectedIndex() != 0) {
            lblLoiNCC.setText("");
        }
    }//GEN-LAST:event_cboMaNccItemStateChanged

    private void cboMaLoHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaLoHangItemStateChanged
        if (cboMaLoHang.getSelectedIndex() != 0) {
            lblLoiMaLoHang.setText("");
        }
    }//GEN-LAST:event_cboMaLoHangItemStateChanged

    private void lblTaoPhieu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTaoPhieu1MouseEntered
        setBackround(new Color(255, 153, 0), Color.WHITE, lblTaoPhieu1);
    }//GEN-LAST:event_lblTaoPhieu1MouseEntered

    private void lblTaoPhieu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTaoPhieu1MouseExited
        setBackround(Color.WHITE, new Color(255, 153, 0), lblTaoPhieu1);
    }//GEN-LAST:event_lblTaoPhieu1MouseExited

    private void tblNhaCungCapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhaCungCapMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            indexSPCC = tblNhaCungCap.getSelectedRow();
            setModelSPCC();
            File f = new File("logos/" + lblHinh.getToolTipText());
            if (f.exists() == false) {
                lblHinh.setIcon(Erro);
            }
        }
    }//GEN-LAST:event_tblNhaCungCapMouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered
        jLabel10.setIcon(Back2);
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited
        jLabel10.setIcon(Back1);
    }//GEN-LAST:event_jLabel10MouseExited

    private void lblTaoPhieu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTaoPhieu1MouseClicked
        if (tblGioHang.getRowCount() == 0) {
            DialogHelper.alert(null,"Vui lòng thêm sản phẩm vào giỏ hàng!");
            return;
        }
        insert();
    }//GEN-LAST:event_lblTaoPhieu1MouseClicked

    private void lblHuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHuyMouseClicked
        // TODO add your handling code here:
        indexGioHang = tblGioHang.getSelectedRow();
        huyHang();
    }//GEN-LAST:event_lblHuyMouseClicked

    private void lblHuyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHuyMouseEntered
        setBackround(new Color(255, 153, 0), Color.WHITE, lblHuy);
    }//GEN-LAST:event_lblHuyMouseEntered

    private void lblHuyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHuyMouseExited
        setBackround(Color.WHITE, new Color(255, 153, 0), lblHuy);
    }//GEN-LAST:event_lblHuyMouseExited

    private void cboNhaCungCapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNhaCungCapItemStateChanged
        // TODO add your handling code here:
        try {
            loadByConditions();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cboNhaCungCapItemStateChanged

    private void cboLoaiSanPhamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiSanPhamItemStateChanged
        // TODO add your handling code here:
        try {
            loadByConditions();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cboLoaiSanPhamItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhapHang_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhapHang_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhapHang_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhapHang_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhapHang_JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JComboBox<String> cboLoaiSanPham;
    private javax.swing.JComboBox<String> cboMaLoHang;
    private javax.swing.JComboBox<String> cboMaNcc;
    private javax.swing.JComboBox<String> cboNhaCungCap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDonViTinh;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblGioHang;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JLabel lblHuy;
    private javax.swing.JLabel lblLoaiSP;
    private javax.swing.JLabel lblLoaiSanPham;
    private javax.swing.JLabel lblLoiDonViTinh;
    private javax.swing.JLabel lblLoiGia;
    private javax.swing.JLabel lblLoiLoaiSP;
    private javax.swing.JLabel lblLoiMaLoHang;
    private javax.swing.JLabel lblLoiMaSP;
    private javax.swing.JLabel lblLoiNCC;
    private javax.swing.JLabel lblLoiSoLuong;
    private javax.swing.JLabel lblLoiTenSP;
    private javax.swing.JLabel lblMaLoHang;
    private javax.swing.JLabel lblMaNCC;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblNgayNhap;
    private javax.swing.JLabel lblNhaCC;
    private javax.swing.JLabel lblNhapHang;
    private javax.swing.JLabel lblSanPhamNCC;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTaoPhieu1;
    private javax.swing.JLabel lblTenSanPham;
    private javax.swing.JLabel lblThemKho;
    private javax.swing.JLabel lblThemSP;
    private javax.swing.JLabel lblTien;
    private javax.swing.JLabel lblTongTien1;
    private javax.swing.JPanel pnlDanhSachNhapHang;
    private javax.swing.JPanel pnlNhapHang;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JPanel pnlThongTinSP;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblNhaCungCap;
    private javax.swing.JTextField txtDonViTinh;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSanPham;
    // End of variables declaration//GEN-END:variables

    private boolean checkFrom() {
        int count = 0;
        //Bỏ trống mã sản phẩm
        if (ValidateNull(txtMaSanPham) == false) {
            DialogHelper.alert(null, "Vui lòng chọn sản phẩm trên bảng sản phẩm!");
            lblLoiMaSP.setText("Không bỏ trống mã sản phẩm!");
            count++;
        } else {
            lblLoiMaSP.setText("");
        }
        //Bỏ trống tên sản phẩm
        if (ValidateNull(txtTenSanPham) == false) {
            lblLoiTenSP.setText("Không bỏ trống tên sản phẩm!");

            count++;
        } else {
            lblLoiTenSP.setText("");
        }
        //Không chọn vào nhà cung cấp
        int NhaCc = cboMaNcc.getSelectedIndex();
        if (NhaCc == 0) {
            lblLoiNCC.setText("Vui lòng chọn vào nhà cung cấp!");
            count++;
        } else {
            lblLoiNCC.setText("");
        }
        //Không chọn vào loại sản phẩm
        int loaiSP = cboLoaiSP.getSelectedIndex();
        if (loaiSP == 0) {
            lblLoiLoaiSP.setText("Vui lòng chọn vào loại sản phẩm!");
            count++;
        } else {
            lblLoiLoaiSP.setText("");
        }
        //Bỏ trống đơn vị tính
        if (ValidateNull(txtDonViTinh) == false) {
            lblLoiDonViTinh.setText("Không bỏ trống đơn vị tính!");
            count++;
        } else {
            lblLoiDonViTinh.setText("");
        }
        //Bỏ trống số điện thoại
        if (ValidateNull(txtGia) == false) {
            lblLoiGia.setText("Không bỏ trống giá sản phẩm!");
            count++;
        } else {
            lblLoiGia.setText("");
        }
        //Bỏ trống Số lượng
        if (ValidateNull(txtSoLuong) == false) {
            lblLoiSoLuong.setText("Không bỏ trống số lượng!");
            count++;
        } else {
            lblLoiSoLuong.setText("");
        } //Bỏ trống mã lô hàng
        int maLoHang = cboMaLoHang.getSelectedIndex();
        if (maLoHang == 0) {
            lblLoiMaLoHang.setText("Vui lòng chọn vào lô hàng!");
            count++;
        } else {
            lblLoiMaLoHang.setText("");
        }
        return count == 0;
    }

    private boolean validateFrom() {
        int count = 0;
        // tính hợp lệ của số lượng
        if (checkSoLuong(txtSoLuong) == false) {
            lblLoiSoLuong.setText("Số lượng nhập vào chưa hợp lệ!");
            count++;
        } else {
            lblLoiSoLuong.setText("");
        }
        //tính hợp lệ của giá
//        if (ValidateGiaSp(txtGia) == false) {
//            lblLoiGia.setText("Giá nhập vào chưa hợp lệ!");
//            count++;
//        } else {
//            lblLoiGia.setText("");
//        }

        if (count != 0) {
            return false;
        }
        // kiểm tra tính hợp lệ mã nhà cung câp
        if (ValidateName(txtDonViTinh) == false) {
            lblLoiDonViTinh.setText("Đơn vị nhập vào chưa hợp lệ!");
            count++;
        } else {
            lblLoiDonViTinh.setText("");
        }

        return true;
    }

    //---------------------------------------------------CHỨC NĂNG-----------------------------------------------------------------------------
    void fillComoboBoxNCC() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNhaCungCap.getModel();
        model.removeAllElements();
        List<NhaCungCap> list = daoNCC.selectAll();
        model.insertElementAt("Tất cả", 0);
        model.setSelectedItem("Tất cả");
        for (int i = 0; i < list.size(); i++) {
            model.insertElementAt(list.get(i), i + 1);
        }
    }

    void fillComboBoxLoaiSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSanPham.getModel();
        model.removeAllElements();
        List<LoaiSP> list = daoLoaiSP.selectAll();
        model.insertElementAt("Tất cả", 0);
        model.setSelectedItem("Tất cả");
        for (int i = 0; i < list.size(); i++) {
            model.insertElementAt(list.get(i), i + 1);
        }
    }

    void fillComboBoxLoHang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaLoHang.getModel();
        model.removeAllElements();
        List<LoHang> list = daoLoHang.selectAll();
        model.insertElementAt("Chọn...", 0);
        model.setSelectedItem("Chọn...");
        for (int i = 0; i < list.size(); i++) {
            model.insertElementAt(list.get(i), i + 1);
        }
    }

    //Tải dữ liệu sản phẩm nhà cung cấp lên bảng theo cboNhaCungCap và cboLoaiSanPham
    void loadByConditions() {
        DefaultTableModel model = (DefaultTableModel) tblNhaCungCap.getModel();
        model.setRowCount(0);
        List<SPCungCap> list = null;
        if (cboNhaCungCap.getSelectedIndex() != 0 && cboLoaiSanPham.getSelectedIndex() != 0) {
            NhaCungCap ncc = (NhaCungCap) cboNhaCungCap.getSelectedItem();
            LoaiSP lsp = (LoaiSP) cboLoaiSanPham.getSelectedItem();
            list = daoSPCC.selectByX2(ncc.getMaNCC(), lsp.getID());
        } else if (cboNhaCungCap.getSelectedIndex() != 0 && cboLoaiSanPham.getSelectedIndex() == 0) {
            NhaCungCap ncc = (NhaCungCap) cboNhaCungCap.getSelectedItem();
            list = daoSPCC.selectByNCC(ncc.getMaNCC());
        } else if (cboNhaCungCap.getSelectedIndex() == 0 && cboLoaiSanPham.getSelectedIndex() != 0) {
            LoaiSP lsp = (LoaiSP) cboLoaiSanPham.getSelectedItem();
            list = daoSPCC.sp_TimSPCCLSP(lsp.getID());
        } else {
            list = daoSPCC.selectAll();
        }
        for (SPCungCap spcc : list) {
            Object[] ob = {spcc.getMaSPCC(), spcc.getMaNCC(), spcc.getTenSP(),
                spcc.getLoaiSP(), spcc.getDonViTinh(),
                spcc.getGia(), spcc.getHinh()};
            model.addRow(ob);
        }
    }

    ChungTu getModelChungTu() {
        ChungTu ct = new ChungTu();
        ct.setTenDangNhap(Auth.user.getTenDn());
        ct.setLoaiChungTu("Nhập hàng");
        ct.setNgayTao(DateHelper.toDate(txtNgayNhap.getText()));
        ct.setTrangThai("Chờ duyệt");
        ct.setMaKH(null);
        ct.setNguoiDuyet(null);
        ct.setTongTien(Double.parseDouble(lblTien.getText().trim()));
        return ct;
    }

//    ChungTuCT getModelChungTuCT(){
//        
//    }
    void setModelSPCC() {
        Color(txtMaSanPham, "", Plain, Black);
        Color(txtTenSanPham, "", Plain, Black);
        Color(txtDonViTinh, "", Plain, Black);
        Color(txtGia, "", Plain, Black);
        txtMaSanPham.setText(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 0)));
        NhaCungCap ncc = daoNCC.selectById(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 1)));
        cboMaNcc.getModel().setSelectedItem(ncc);
        txtTenSanPham.setText(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 2)));
        LoaiSP lsp = daoLoaiSP.selectById(Integer.parseInt(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 3))));
        cboLoaiSP.getModel().setSelectedItem(lsp);
        txtDonViTinh.setText(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 4)));
        txtGia.setText(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 5)));
        ImageIcon anh = ImageHelper.read(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 6)));
        lblHinh.setIcon(anh);
        lblHinh.setToolTipText(String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 6))); //Giữ tên hình trong tooltip

    }

    void loadGioHang() {
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        String maSanPham = txtMaSanPham.getText();
        String maNCC = String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 1));
        NhaCungCap ncc = daoNCC.selectById(maNCC);
        String tenNCC = ncc.getTenNCC();
        String tenSP = txtTenSanPham.getText().trim();
        String loaiSP = String.valueOf(tblNhaCungCap.getValueAt(indexSPCC, 3));
        String donVT = txtDonViTinh.getText().trim();
        String gia = txtGia.getText().trim();
        String soLuong = txtSoLuong.getText().trim();
        LoHang loHang = (LoHang) cboMaLoHang.getSelectedItem();
        String maLoHang = loHang.getMaLoHang();
        String ngayNhap = txtNgayNhap.getText().trim();

        int count = model.getRowCount();
        boolean check = true;
        for (int i = 0; i < count; i++) {
            if (String.valueOf(model.getValueAt(i, 0)).equals(maSanPham)) {
                indexGioHang = i;
                check = false;
                break;
            }
        }

        double tien = 0;
        if (check == true) {
            Object[] ob = {maSanPham, tenSP, loaiSP, gia, soLuong, donVT, tenNCC, maLoHang, ngayNhap};
            model.addRow(ob);
            tien = Double.parseDouble(lblTien.getText().trim());
            tien += Double.parseDouble(txtGia.getText()) * Integer.parseInt(txtSoLuong.getText());
//            lblTien.setText(String.valueOf(tien));
            String formatted = String.format("%.1f", tien);
            lblTien.setText(formatted);
        } else {
            int sl = Integer.parseInt(String.valueOf(tblGioHang.getValueAt(indexGioHang, 4))) + Integer.parseInt(soLuong);
            tblGioHang.setValueAt(sl, indexGioHang, 4);
            for (int i = 0; i < count; i++) {
                tien += Double.parseDouble(String.valueOf(model.getValueAt(i, 3))) * Integer.parseInt(String.valueOf(model.getValueAt(i, 4)));
            }
            String formatted = String.format("%.1f", tien);
            lblTien.setText(formatted);
        }

    }

    void huyHang() {
        if (indexGioHang == -1) {
            DialogHelper.alert(null, "Vui lòng chọn sản phẩm trên giỏ hàng");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        double gia = Double.parseDouble(String.valueOf(model.getValueAt(indexGioHang, 3)));
        int sl = Integer.parseInt(String.valueOf(model.getValueAt(indexGioHang, 4)));
        double tong = gia * sl;
        double tien = Double.parseDouble(lblTien.getText());
        double tinhLai = tien - tong;
        lblTien.setText(String.valueOf(tinhLai));
        model.removeRow(indexGioHang);
    }

    void clear() {
        Color(txtMaSanPham, "VD: SP1 ", Italic, Gray);
        cboMaNcc.removeAllItems();
        Color(txtTenSanPham, "VD: Keo 502 ", Italic, Gray);
        cboLoaiSP.removeAllItems();
        Color(txtDonViTinh, "VD: Kg(Ki lô gram) ", Italic, Gray);
        Color(txtGia, "VD: 15,000 ", Italic, Gray);
        Color(txtSoLuong, "VD: 10000 ", Italic, Gray);
        cboMaLoHang.setSelectedIndex(0);
        lblTien.setText("0");
        lblHinh.setIcon(null);
        lblHinh.setToolTipText(null);
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        model.setRowCount(0);
    }

    void insert() {
        ChungTu ct = getModelChungTu();
        String maCT = daoChungTu.insert(ct);
        int count = tblGioHang.getRowCount();
        if (maCT != null) {
            for (int i = 0; i < count; i++) {
                ChungTuCT ctt = new ChungTuCT();
                ctt.setMaChungTu(maCT);
                ctt.setMaSP(String.valueOf(tblGioHang.getValueAt(i, 0)));
                ctt.setTenSP(String.valueOf(tblGioHang.getValueAt(i, 1)));
                ctt.setLoaiSP(Integer.parseInt(String.valueOf(tblGioHang.getValueAt(i, 2))));
                ctt.setGia(Double.parseDouble(String.valueOf(tblGioHang.getValueAt(i, 3))));
                ctt.setSoLuong(Integer.parseInt(String.valueOf(tblGioHang.getValueAt(i, 4))));
                ctt.setDonViTinh(String.valueOf(tblGioHang.getValueAt(i, 5)));
                ctt.setTenNCC(String.valueOf(tblGioHang.getValueAt(i, 6)));
                ctt.setMaLoHang(String.valueOf(tblGioHang.getValueAt(i, 7)));
                ctt.setNgayNhap(DateHelper.toDate(String.valueOf(tblGioHang.getValueAt(i, 8))));
                SPCungCap nvv = daoSPCC.selectById(String.valueOf(tblGioHang.getValueAt(i, 0)));
                ctt.setHinh(String.valueOf(nvv.getHinh()));
                ctt.setMoTa(null);
                if (daoChungTuCT.insert(ctt) == 0) {
                    DialogHelper.alert(null, "Thêm thất bại");
                    break;
                }
            }
            DialogHelper.alert(null, "Thêm thành công");
            clear();
        }
    }
}
